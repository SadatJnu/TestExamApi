// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestExamApi.Data;

#nullable disable

namespace TestExamApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestExamApi.Entites.Allergies", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientInfoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PatientInfoID");

                    b.ToTable("Allergies");
                });

            modelBuilder.Entity("TestExamApi.Entites.Allergies_Details", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AllergiesID")
                        .HasColumnType("int");

                    b.Property<int>("AllergisID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AllergiesID");

                    b.ToTable("Allergies_Details");
                });

            modelBuilder.Entity("TestExamApi.Entites.DiseaseInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DiseaseInformations");
                });

            modelBuilder.Entity("TestExamApi.Entites.NCD", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientInfoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PatientInfoID");

                    b.ToTable("NCDs");
                });

            modelBuilder.Entity("TestExamApi.Entites.NCD_Details", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("NCDID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NCDID");

                    b.ToTable("NCD_Details");
                });

            modelBuilder.Entity("TestExamApi.Entites.PatientInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("DeseaseId")
                        .HasColumnType("int");

                    b.Property<int>("EpilepsyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PatientInfos");
                });

            modelBuilder.Entity("TestExamApi.Entites.Allergies", b =>
                {
                    b.HasOne("TestExamApi.Entites.PatientInfo", null)
                        .WithMany("Allergies")
                        .HasForeignKey("PatientInfoID");
                });

            modelBuilder.Entity("TestExamApi.Entites.Allergies_Details", b =>
                {
                    b.HasOne("TestExamApi.Entites.Allergies", null)
                        .WithMany("Allergies_Details")
                        .HasForeignKey("AllergiesID");
                });

            modelBuilder.Entity("TestExamApi.Entites.NCD", b =>
                {
                    b.HasOne("TestExamApi.Entites.PatientInfo", null)
                        .WithMany("NCDs")
                        .HasForeignKey("PatientInfoID");
                });

            modelBuilder.Entity("TestExamApi.Entites.NCD_Details", b =>
                {
                    b.HasOne("TestExamApi.Entites.NCD", null)
                        .WithMany("NCD_Details")
                        .HasForeignKey("NCDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestExamApi.Entites.Allergies", b =>
                {
                    b.Navigation("Allergies_Details");
                });

            modelBuilder.Entity("TestExamApi.Entites.NCD", b =>
                {
                    b.Navigation("NCD_Details");
                });

            modelBuilder.Entity("TestExamApi.Entites.PatientInfo", b =>
                {
                    b.Navigation("Allergies");

                    b.Navigation("NCDs");
                });
#pragma warning restore 612, 618
        }
    }
}
